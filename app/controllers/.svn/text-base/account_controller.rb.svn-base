class AccountController < ApplicationController

#  layout  'scaffold'

# level_0: full function

  before_filter(:chk_user_level_0, :only => [:delete,
                                             :edit_user,
                                             :edit_group,
                                             :destroy_user,
                                             :destroy_group ])


  def index
    login
    render :action => 'login'
  end



  def new_group
    @group = Group.new
  end

  def new_user
    @user = User.new
    @groups = Group.find(:all)
  end
  
  def create_group
    @group = Group.new(params[:group])
    if @group.save
      flash['notice']  = _("Group was successfully created")
      redirect_to(:action => "list_group")
    else
      render(:action => 'new_group')
    end
  end

  def create_user
    @user = User.new(params[:user])
    if @user.save
      flash['notice']  = _("User was successfully created")
      redirect_to(:action => 'list_user', :id => @user.group)
    else
      @groups = Group.find(:all)
      render(:action => 'new_user')
    end
  end

  def signup_user
    case request.method
      when :post
        @params['user']['group_id'] = 4
        @params['user']['level'] = 3
        @user = User.new(@params['user'])
        
        if @user.save      
          @message = _('Signup successful, please login by new userid and password')
           render(:action => 'login', :controller => 'account')

        end
    end      
  end  



  def list_group
    @group_pages, @groups = paginate(:groups, :per_page => 10)
  end

  def list_user
    @group = Group.find(params[:id])
    @user_pages, @users = paginate(:users,
                        :conditions => ['group_id = ?', @group.id])
  end

  def edit_group
    @group = Group.find(params[:id])
  end

  def edit_user
    @user = User.find(params[:id])
    @groups = Group.find(:all)
  end

  def edit_user_by_user
#    @user = User.find(params[:id])
    @user = User.find(session[:user].id)
    @groups = Group.find(:all)
  end


  def update_group
    @group = Group.find(params[:id])
    if @group.update_attributes(params[:group])
      flash[:notice] = _('Group was successfully updated.')
      redirect_to(:action => 'list_group')
    else
      render(:action => 'edit_group')
    end
  end

  def update_user
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user])
      flash[:notice] = _('User was successfully updated.')
      redirect_to(:action => 'list_user', :id => @user.group_id)
    else
      @groups = Group.find(:all)
      render(:action => 'edit_user')
    end
  end

  def update_user_by_user
    @user = User.find(session[:user].id)
    if @user.update_attributes(params[:user])
      flash[:message] = _('User was successfully updated.')
      redirect_to(:action => 'list', :controller => 'item' )
    else
      render(:action => 'edit_user_by_user')
#      redirect_to(:action => 'list', :controller => 'item' )
    end
  end


  def destroy_group
    Group.find(params[:id]).destroy
    redirect_to(:action => 'list_group')
  end

  def destroy_user
    user = User.find(params[:id])
    group_id = user.group_id
    user.destroy
    redirect_to(:action => 'list_user', :id => group_id )
  end

  def login
    case request.method
      when :post
        if session[:user] = User.authenticate(params[:user][:login], params[:user][:password])
           flash[:notice] = _('Login complete')
           redirect_to(:controller => 'account', :action => 'welcome') 
        else
          @login    = params[:user][:login]
          @message  = _('Login unsuccessful')
        end
      end

  end

#  def login
#    case request.method
#      when :post      
#        if session['user'] = User.authenticate(@params['user_login'], @params['user_password'])
#          flash['notice']  = "Login successful"
#          redirect_back_or_default :action => "welcome"
#        else
#          @login    = @params['user_login']
#          @message  = "Login unsuccessful"
#      end
#    end
#  end



#  def login_old
#    case request.method
#      when :post      
##        if session[:user] = User.authenticate(params[:user][:login], params[:user][:password])
#
#        if session['user'] = User.authenticate(@params['user_login'], @params['user_password'])
#          flash['notice']  = "Login successful"
#          redirect_back_or_default :action => "welcome"
#        else
#          @login    = @params['user_login']
#          @message  = "Login unsuccessful"
#      end
#    end
#  end
  
  def signup
    case request.method
      when :post
        @user = User.new(@params['user'])
        
        if @user.save      
          session['user'] = User.authenticate(@user.login, @params['user']['password'])
          flash['notice']  = _("Signup successful")
          redirect_back_or_default :action => "welcome"          
        end
    end      
  end  
  
  def delete
    if @params['id'] and @session['user']
      @user = User.find(@params['id'])
      @user.destroy
    end
    redirect_back_or_default :action => "welcome"
  end  
    
  def logout
    session[:user] = nil
    flash[:notice] = _('Logged out of the system')
    redirect_to(:controller => 'item', :action => 'by_map') 
  end
    
  def welcome
  end

  private
  
  def chk_user_level_0
    unless session[:user][:level] == 0
      flash[:notice] = 'user level too low !!'
      redirect_to(:action => 'list_group')
    end
  end  
  
end
